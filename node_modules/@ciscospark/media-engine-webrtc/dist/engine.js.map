{"version":3,"sources":["engine.js"],"names":["a","find","g","name","unshift","reg","DirectionContainer","targetMediaDirection","capitalize","audio","video","getTargetMediaDirection","target","kind","get","WebRTCMediaEngine","pc","localScreenShare","getTracks","length","constraints","finalConstraints","fake","process","env","NODE_ENV","navigator","mediaDevices","getUserMedia","attrs","options","logger","console","RTCPeerConnection","iceServers","bundlePolicy","negotiationNeeded","bandwidthLimit","audioBandwidthLimit","videoBandwidthLimit","parent","nextTick","onnegotiationneeded","answerSdp","info","triggerNegotiationNeeded","ontrack","event","trigger","stream","remoteMediaStream","MediaStream","streams","forEach","track","addTrack","onended","removeTrack","undefined","includes","err","needsIce","iceGatheringState","sdp","localDescription","directionKey","media","m","type","icePromise","resolve","onicecandidate","candidate","td","wantsVideo","_prepareIceGatherer","gumming","_getUserMedia","then","offerOptions","offerToReceiveAudio","getReceivers","r","offerToReceiveVideo","createOffer","offer","setLocalDescription","streamId","id","getVideoTracks","trackId","msid","sections","split","join","offerSdp","defaultCodecParams","newCodecParams","replace","setRemoteDescription","RTCSessionDescription","sendingAudio","sendingVideo","direction","constraint","_setNewMediaConstraint","localMediaStream","filter","t","getSenders","s","readyState","warn","stop","addOrReplaceTrack","trackOrConstraint","set","mediaSource","width","min","max","height","frameRate","_setScreenShare","Error","MediaStreamTrack","_setNewMediaTrack","_setNewMediaDirection","shouldRecv","unpauseReceivingMedia","pauseReceivingMedia","screen","all","userStream","screenStream","getAudioTracks","catch","reject","existing","senders","enabled","tracks","signalingState","close","ended","off","prototype"],"mappings":"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","file":"engine.js","sourcesContent":["import {debounce} from 'lodash-decorators';\nimport {nonenumerable} from 'core-decorators';\nimport {make as makeTemplateContainer, oneFlight, tap, whileInFlight} from '@ciscospark/common';\nimport evented from '@ciscospark/common-evented';\nimport Events from 'ampersand-events';\nimport {defaults} from 'lodash';\nimport {parse} from 'sdp-transform';\nimport grammar from 'sdp-transform/lib/grammar';\n\nimport {\n  ensureH264,\n  limitBandwith,\n  getMediaDirectionFromTracks,\n  kindToPropertyFragment\n} from './webrtc-helpers';\n\n// Add support for our custom \"content\" attribute. Note: this seems to make\n// parse() work correctly, but I don't think I could get write() to work.\nif (!grammar.a.find((g) => g.name === 'content')) {\n  grammar.a.unshift({\n    // name appears to be where we stick the value of this field in the parsed\n    // media object\n    name: 'content',\n    // reg determines whether or not this line should be handled by this rule\n    reg: /^content:(slides)/\n  });\n}\n\nconst DirectionContainer = makeTemplateContainer(WeakMap, Map);\nconst targetMediaDirection = new DirectionContainer();\n\nconst capitalize = {\n  audio: 'Audio',\n  video: 'Video'\n};\n\n/**\n * Wrapper around targetMediaDirection.get which return `inactive` instead of\n * undefined\n * @param {WebRTCMediaEngine} target\n * @param {string} kind\n * @private\n * @returns {string}\n */\nfunction getTargetMediaDirection(target, kind) {\n  return targetMediaDirection.get(target, kind) || 'inactive';\n}\n\n/**\n * Interface for doing webrtc things\n * @protected\n */\nexport default class WebRTCMediaEngine {\n  /**\n   * Wrapper around navigator.mediaDevices.getUserMedia\n   *\n   * @param {MediaStreamContraints} constraints\n   * @returns {Promise<MediaStream>}\n   */\n  static getUserMedia(constraints) {\n    const finalConstraints = defaults({}, constraints, {fake: process.env.NODE_ENV === 'test'});\n    return navigator.mediaDevices.getUserMedia(finalConstraints);\n  }\n\n  logger = console\n\n  @evented\n  /**\n   * Represents the local party's outgoing stream. Instantiated when the class\n   * is instantiated.\n   * @type {MediaStream}\n   */\n  localMediaStream\n\n  @evented\n  /**\n   * Represent the remote party's incoming media. Instantiated when the class is\n   * instantiated.\n   * @type {MediaStream}\n   */\n  remoteMediaStream\n\n  @evented\n  /**\n   * Reserved for future use\n   * @type {MediaStream}\n   */\n  localScreenShare\n\n  /**\n   * Peer Connection\n   * @type {RTCPeerConnection}\n   */\n  pc = new RTCPeerConnection({\n    iceServers: [],\n    bundlePolicy: 'max-compat'\n  });\n\n  @evented\n  /**\n   * The most-recently produced offer\n   * @private\n   */\n  offerSdp = '';\n\n  @evented\n  /**\n   * The most-recently accepted answer\n   * @private\n   */\n  answerSdp = '';\n\n  @evented\n  sendingAudio = false;\n\n  @evented\n  sendingVideo = false;\n\n  @evented\n  receivingAudio = false;\n\n  @evented\n  receivingVideo = false;\n\n  @evented\n  ended = false;\n\n  negotiationNeeded = false;\n\n  bandwidthLimit = {\n    audioBandwidthLimit: 60000,\n    videoBandwidthLimit: 1000000\n  };\n\n  /**\n   * Returns the current audio direction\n   * @returns {string}\n   */\n  get audioDirection() {\n    return getMediaDirectionFromTracks('audio', this.pc);\n  }\n\n  /**\n   * Returns the current video direction\n   * @returns {string}\n   */\n  get videoDirection() {\n    return getMediaDirectionFromTracks('video', this.pc);\n  }\n\n  /**\n   * Returns the current screen direction\n   * @returns {string}\n   */\n  get screenDirection() {\n    return (!this.localScreenShare || this.localScreenShare.getTracks().length === 0) ? 'inactive' : 'sendonly';\n  }\n\n  /**\n   * Constructor\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Logger} options.logger (optional): defaults to console\n   * @returns {WebRTCMediaEngine}\n   */\n  constructor(attrs = {}, options = {}) {\n    if (options.parent) {\n      // This is a bit of weirdness to maintain amp-state compatibility\n      process.nextTick(() => {\n        if (options.parent.logger) {\n          this.logger = options.parent.logger;\n        }\n      });\n    }\n    else if (attrs.logger) {\n      this.logger = attrs.logger;\n    }\n\n    this.pc.onnegotiationneeded = () => {\n      if (this.answerSdp && !this.negotiationNeeded) {\n        this.logger.info('peer connection emitted negotiationneeded');\n        this.negotiationNeeded = true;\n        this.triggerNegotiationNeeded();\n      }\n    };\n\n    // Note: adapter.js doesn't seem to fully shim the track event.\n    // addEventListener doesn't appear to work for it in chrome\n    this.pc.ontrack = (event) => {\n      this.trigger('track');\n      const stream = this.remoteMediaStream || new MediaStream();\n      event.streams[0]\n        .getTracks()\n        .forEach((track) => {\n          stream.addTrack(track);\n          track.onended = () => {\n            stream.removeTrack(track);\n            track.onended = undefined;\n            try {\n              this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n            }\n            catch (err) {\n              this[`receiving${capitalize[track.kind]}`] = false;\n            }\n          };\n\n          this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n        });\n      this.remoteMediaStream = stream;\n      this.trigger('internalTrackUpdate');\n    };\n  }\n\n  /* eslint-disable complexity */\n  /**\n   * Determines if ice gathering is necessary and sends it up when appropriate\n   * @private\n   * @returns {Promise|undefined}\n   */\n  _prepareIceGatherer() {\n    let needsIce = false;\n    if (this.pc.iceGatheringState === 'new') {\n      this.logger.info('ice gathering is in state \"new\", definitely need to block for ice gathering');\n      needsIce = true;\n    }\n    else {\n      const sdp = parse(this.pc.localDescription.sdp);\n      [\n        'audio',\n        'video',\n        'screen'\n      ].forEach((kind) => {\n        const directionKey = `${kind}Direction`;\n        if (this[directionKey] !== 'inactive' || getTargetMediaDirection(this, kind) !== this[directionKey] && getTargetMediaDirection(this, kind) !== 'inactive') {\n          const media = sdp.media.find((m) => m.type === kind);\n          if (media) {\n            this.logger.info(`${kind} candidates already gathered`);\n          }\n          else {\n            this.logger.info(`transitioning ${kind} from inactive, ice needed`);\n            needsIce = true;\n          }\n        }\n      });\n    }\n\n    let icePromise;\n    if (needsIce) {\n      icePromise = new Promise((resolve) => {\n        this.logger.info('configuring ice gathering');\n        this.pc.onicecandidate = (event) => {\n          if (!event.candidate) {\n            this.logger.info('ice gathering complete');\n            this.pc.onicecandidate = undefined;\n            resolve();\n            return;\n          }\n\n          this.logger.info('got ice candidate');\n        };\n      });\n    }\n\n    return icePromise;\n  }\n\n  /* eslint-enable complexity */\n\n  /**\n   * Creates an offer SDP\n   * @returns {Promise<string>}\n   */\n  createOffer() {\n    this.logger.info('beginning negotiation');\n\n    const td = getTargetMediaDirection(this, 'video');\n    const wantsVideo = td.includes('send') || td.includes('recv');\n\n    const icePromise = this._prepareIceGatherer();\n\n    return new Promise((resolve) => {\n      if (this.gumming) {\n        this.logger.info('gum in flight, waiting until it completes');\n        // Since gum is protected by @oneflight, returning it here will block\n        // until it completes but, more importantly, propagate a thrown\n        // exception up the stack\n        resolve(this._getUserMedia()\n          .then(tap(() => this.logger.info('gum completed'))));\n        return;\n      }\n\n      resolve();\n    })\n      .then(tap(() => this.logger.info('creating offer', this.offerOptions)))\n      .then(() => {\n        // This is a (hopefully temporary) hack to deal with the fact that one\n        // out of two browsers removes the remote stream when offerToReceive* is\n        // false. We've already made the choice to disable the stream, but we\n        // want to make sure we're still willing to receive an answer for it.\n        this.offerOptions.offerToReceiveAudio = this.offerOptions.offerToReceiveAudio || !!this.pc.getReceivers().find((r) => r.track.kind === 'audio');\n        this.offerOptions.offerToReceiveVideo = this.offerOptions.offerToReceiveVideo || !!this.pc.getReceivers().find((r) => r.track.kind === 'video');\n        return this.pc.createOffer(this.offerOptions);\n      })\n      .then(tap((offer) => {\n        offer.sdp = limitBandwith(this.bandwidthLimit, offer.sdp);\n      }))\n      .then(tap(() => this.logger.info('setting local description')))\n      .then((offer) => this.pc.setLocalDescription(offer))\n      .then(tap(() => icePromise && this.logger.info('blocking for ice gathering')))\n      .then(() => icePromise)\n      .then(tap(() => this.logger.info('limiting bandwith')))\n      .then(() => limitBandwith(this.bandwidthLimit, this.pc.localDescription.sdp))\n      .then(tap(() => wantsVideo && this.logger.info('confirm h264 in offer')))\n      .then(ensureH264(wantsVideo))\n      .then((sdp) => {\n        if (this.localScreenShare) {\n          const streamId = this.localScreenShare.id;\n          const track = this.localScreenShare.getVideoTracks()[0];\n          if (track) {\n            const trackId = track.id;\n            const msid = `${streamId} ${trackId}`;\n            const sections = sdp.split(msid);\n            if (sections[1]) {\n              sections[1] = `\\r\\na=content:slides${sections[1]}`;\n              sdp = sections.join(msid);\n              return sdp;\n            }\n          }\n\n          sdp += 'a=content:slides\\r\\n';\n        }\n        return sdp;\n      })\n      .then(tap((sdp) => {\n        this.offerSdp = sdp;\n      }));\n  }\n\n  /**\n   * Receives an answer SDP\n   * @param {string} sdp\n   * @returns {Promise}\n   */\n  acceptAnswer(sdp) {\n    this.logger.info('accepting answer');\n\n    // Allow larger frames (this makes screenshare look *way* better, but no\n    // idea what impact it's having on the camera stream - we may want to limit\n    // it to just screen share at some future point)\n    const defaultCodecParams = /max-mbps=27600;max-fs=920/g;\n    const newCodecParams = 'max-mbps=27600;max-fs=8160';\n    sdp = sdp.replace(defaultCodecParams, newCodecParams);\n\n    // If the screenshare goes inactive, make sure the sdp includes a direction\n    // config\n    sdp = sdp.replace(/m=video 0(.*?\\r\\n)/, 'm=video 0$1a=inactive\\r\\n');\n    return this.pc.setRemoteDescription(new RTCSessionDescription({\n      sdp,\n      type: 'answer'\n    }))\n      .then(() => {\n        this.logger.info('answer accepted');\n        this.answerSdp = sdp;\n        this.sendingAudio = getMediaDirectionFromTracks('audio', this.pc).includes('send');\n        this.sendingVideo = getMediaDirectionFromTracks('video', this.pc).includes('send');\n        this.trigger('answeraccepted');\n        this.negotiationNeeded = false;\n      });\n  }\n\n  @nonenumerable\n  /**\n   * {@link MediaStreamConstraints} that'll be used for the next call to\n   * {@link WebRTCMediaEngine.getUserMedia()}\n   * @private\n   * @type {MediaStreamConstraints}\n   */\n  constraints = {};\n\n  @nonenumerable\n  /**\n   * {@link RTCOfferOptions} that'll be used for the next call to\n   * {@link RTCPeerConnection.createOffer}\n   * @private\n   * @type {RTCOfferOptions}\n   */\n  offerOptions = {};\n\n  @nonenumerable\n  @evented\n  /**\n   * Indicates whether or not a call to {@link MediaDevices#getUserMedia()} is\n   * in flight\n   * @private\n   * @type {boolean}\n   */\n  gumming = false\n\n  /**\n   * Change media direction without consumer provided tracks or complex\n   * constraints\n   * @param {string} kind\n   * @param {string} direction\n   * @private\n   * @returns {undefined}\n   */\n  _setNewMediaDirection(kind, direction) {\n    this.logger.info(`setting ${kind} direction to ${direction}`);\n    const constraint = direction.includes('send');\n    this.constraints[kind] = constraint;\n\n    if (constraint) {\n      if (!this[`${kind}Direction`].includes('send')) {\n        this._setNewMediaConstraint(kind, constraint);\n      }\n    }\n    else {\n      this.logger.info(`removing any no-longer-needed ${kind} tracks`);\n      if (!this.localMediaStream) {\n        return;\n      }\n      this.localMediaStream\n        .getTracks()\n        .filter((t) => t.kind === kind)\n        .forEach((t) => {\n          this.logger.info(`removing ${kind} track ${t.id} from localMediaStream`);\n          this.localMediaStream.removeTrack(t);\n          this.logger.info(`removing ${kind} track ${t.id} from peer connection`);\n          // Note: Doesn't like removing senders whose tracks are not live, so\n          // t.stop() has to come after removeTrack()\n          try {\n            this.pc.removeTrack(this.pc.getSenders().find((s) => s.track === t));\n          }\n          catch (err) {\n            if (t.readyState === 'ended') {\n              this.logger.warn('Suppressing error caused by trying to remove an ended track from a peer connection');\n            }\n            else {\n              this.logger.warn('suppressing removeTrack error. We don\\'t know why firefox does this, but we\\'re still going to make sure the track is stopped');\n            }\n            this.logger.warn(err);\n          }\n          this.logger.info(`setting receiving${capitalize[kind]} to false`);\n          this[`sending${capitalize[kind]}`] = false;\n          this.logger.info(`stopping ${kind} track ${t.id}`);\n          t.stop();\n        });\n    }\n  }\n\n  /**\n   * Sets or replaces current track for $kind\n   * @param {string} kind\n   * @param {MediaStreamTrack} track\n   * @returns {undefined}\n   */\n  _setNewMediaTrack(kind, track) {\n    this.logger.info(`setting new ${kind} track`);\n    this.constraints[kind] = false;\n    this.addOrReplaceTrack(track);\n  }\n\n  /**\n   * Causes track for ${kind} to be set or replaced according to $constraint\n   * @param {string} kind\n   * @param {Object|boolean} constraint\n   * @returns {undefined}\n   */\n  _setNewMediaConstraint(kind, constraint) {\n    this.logger.info(`setting ${kind} with new constraint`);\n    this.constraints[kind] = constraint;\n    this._getUserMedia();\n  }\n\n  /**\n   * Starts or stops an outbound screenshare\n   *\n   * @param {string} direction currently only inactive or sendonly\n   * @param {Object|MediaStreamTrack} trackOrConstraint\n   * @returns {Promise}\n   */\n  _setScreenShare(direction, trackOrConstraint) {\n    this.logger.info('calling _setScreenShare');\n    targetMediaDirection.set(this, 'screen', direction);\n    if (direction.includes('send')) {\n      const constraint = defaults({}, trackOrConstraint, {\n        mediaSource: 'application',\n        width: {\n          min: '160',\n          max: '1920'\n        },\n        height: {\n          min: '90',\n          max: '1080'\n        },\n        frameRate: {\n          min: '1',\n          max: '30'\n        }\n      });\n\n      this._setNewMediaConstraint('screen', constraint);\n      return;\n    }\n\n    this.logger.info('removing existing screenshare tracks from peer connection and localScreenShare stream');\n    this.pc.getSenders()\n      .filter((s) => this.localScreenShare.getTracks().includes(s.track))\n      .forEach((s) => {\n        this.logger.info(`removing screenshare track ${s.track.id} from peer connection and localScreenShare stream`);\n\n        this.pc.removeTrack(s);\n        this.localScreenShare.removeTrack(s.track);\n        s.track.stop();\n\n        this.logger.info(`removed screenshare track ${s.track.id} from peer connection and localScreenShare stream`);\n      });\n  }\n\n  // I don't see any further ways to reduce complexity without hurting\n  // readability\n  /* eslint-disable complexity */\n  /**\n   * Sets a media direction for a given media type. Almost certainly triggers\n   * renegotiation. This is the method to use if you want to replace a track.\n   * @param {string} kind audio|video\n   * @param {string} direction sendonly|recvonly|sendrecv|inactive\n   * @param {MediaStreamTrack|Object} trackOrConstraint\n   * @returns {Promise}\n   */\n  setMedia(kind, direction, trackOrConstraint) {\n    this.logger.info('setMedia');\n    if (kind === 'screen') {\n      this.logger.info('setMedia: setting new screen direction');\n      this._setScreenShare(direction, trackOrConstraint);\n      return;\n    }\n    if (trackOrConstraint) {\n      if (!direction.includes('send')) {\n        throw new Error(`Cannot set new ${kind} track or constraint if direction does not include send`);\n      }\n\n      if (trackOrConstraint instanceof MediaStreamTrack) {\n        if (trackOrConstraint.kind !== kind) {\n          throw new Error(`track is not a valid ${kind} media stream track`);\n        }\n\n        this._setNewMediaTrack(kind, trackOrConstraint);\n      }\n      else {\n        this._setNewMediaConstraint(kind, trackOrConstraint);\n      }\n    }\n    else {\n      if (direction === getTargetMediaDirection(this, kind)) {\n        this.logger.info(`${kind} already transitioning to ${direction}, not making changes`);\n        return;\n      }\n\n      if (direction === this[`${kind}Direction`]) {\n        this.logger.info(`${kind} already set to ${direction}, not making changes`);\n        return;\n      }\n      this._setNewMediaDirection(kind, direction);\n    }\n\n    const shouldRecv = direction.includes('recv');\n\n    targetMediaDirection.set(this, kind, direction);\n\n    this.offerOptions[`offerToReceive${kindToPropertyFragment(kind)}`] = shouldRecv;\n\n    if (shouldRecv) {\n      if (this.remoteMediaStream && this.remoteMediaStream.getTracks().find((t) => t.kind === kind)) {\n        this.unpauseReceivingMedia(kind);\n      }\n      else if (this.answerSdp) {\n        this.triggerNegotiationNeeded();\n      }\n    }\n    else if (this.remoteMediaStream && this.remoteMediaStream.getTracks().find((t) => t.kind === kind)) {\n      this.pauseReceivingMedia(kind);\n    }\n  }\n\n  /* eslint-enable complexity */\n\n  @whileInFlight('gumming')\n  @oneFlight\n  /**\n   * Wrapper around {@link MediaDevices#getUserMedia()} that delays the call one\n   * tick to reduce the number of permissions dialogs presented to the user.\n   * @name _getUserMedia\n   * @returns {Promise<MediaStream>}\n   */\n  // It's not missing, but the decorator is throwing off eslint\n  // eslint-disable-next-line require-jsdoc\n  _getUserMedia() {\n    this.logger.info('enqueing request to get user media');\n    return new Promise((resolve) => process.nextTick(resolve))\n      .then(() => {\n        if (this.constraints.audio === true && this.pc.getSenders().find((s) => s.track.kind === 'audio')) {\n          this.logger.info('already have a local audio track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'audio');\n        }\n\n        if (this.constraints.video === true && this.pc.getSenders().find((s) => s.track.kind === 'video')) {\n          this.logger.info('already have a local video track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'video');\n        }\n\n        const {audio, video, screen} = this.constraints;\n\n        return Promise.all([\n          (audio || video) && WebRTCMediaEngine.getUserMedia({audio, video}),\n          screen && WebRTCMediaEngine.getUserMedia({video: screen})\n        ]);\n      })\n      .then(([userStream, screenStream]) => {\n        if (userStream) {\n          this.logger.info(`got local media stream with ${userStream.getAudioTracks().length} audio tracks and ${userStream.getVideoTracks().length} video tracks`);\n          userStream.getTracks().forEach((t) => this.addOrReplaceTrack(t));\n        }\n\n\n        if (screenStream) {\n          if (this.localScreenShare) {\n            this.logger.info('removing existing screenshare tracks from peer connection and localScreenShare stream');\n            this.pc.getSenders()\n              .filter((s) => this.localScreenShare.getTracks().includes(s.track))\n              .forEach((s) => {\n                this.pc.removeTrack(s);\n                this.localScreenShare.removeTrack(s.track);\n              });\n\n\n            this.logger.info('adding new screen track to localScreenShare stream');\n            screenStream.getTracks().forEach((t) => {\n              this.localScreenShare.addTrack(t);\n              this.pc.addTrack(t, this.localScreenShare);\n            });\n          }\n          else {\n            this.logger.info('adding localScreenShare for the first time');\n            this.localScreenShare = screenStream;\n\n            this.logger.info('adding new screenshare track to peer connection');\n            screenStream.getVideoTracks().forEach((t) => this.pc.addTrack(t, screenStream));\n          }\n        }\n\n\n        this.constraints = {};\n      })\n      .catch((err) => {\n        this.trigger('error', err);\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * adds or replaces a local @{link MediaStreamTrack}\n   * @private\n   * @param {MediaStreamTrack} track\n   * @returns {undefined}\n   */\n  addOrReplaceTrack(track) {\n    if (!this.localMediaStream) {\n      this.localMediaStream = new MediaStream();\n    }\n    this.logger.info(`preparing to add ${track.kind} to local media stream`);\n    const existing = this.pc.getSenders().find((s) => s.track.kind === track.kind && s.track !== track);\n    if (existing) {\n      this.logger.info(`removing previous ${track.kind} from local media stream`);\n      this.pc.removeTrack(existing);\n      this.localMediaStream.removeTrack(existing.track);\n      // it may not be appropriate to stop the track if it was supplied by the\n      // engine consumer, but I'm inclined not to deal with that unless it\n      // becomes a real issue.\n      track.stop();\n    }\n\n    this.logger.info(`adding ${track.kind} to local media stream`);\n    this.localMediaStream.addTrack(track);\n    this.logger.info(`adding ${track.kind} to peer connection`);\n    this.pc.addTrack(track, this.localMediaStream);\n\n    this.logger.info(`setting sending${capitalize[track.kind]} to true`);\n    this[`sending${capitalize[track.kind]}`] = true;\n  }\n\n  /**\n   * Stops sending useful bits on the identified track, but does not end it (the\n   * camera/mic will stay on but the remote party(s) will not see/hear anything).\n   * Avoids renegotiation. Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to pause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`pausing ${kind} sender`);\n      s.track.enabled = false;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to false`);\n    this[`sending${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Resumes sending bits on the identified track. Throws if `kind` does not\n   * identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to unpause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`unpausing ${kind} sender`);\n      s.track.enabled = true;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to true`);\n    this[`sending${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=false. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    if (!this.remoteMediaStream) {\n      throw new Error('No remote media stream available');\n    }\n    const tracks = this.remoteMediaStream\n      .getTracks()\n      .filter((t) => t.kind === kind);\n\n    if (tracks.length === 0) {\n      throw new Error(`No remote ${kind} media tracks to pause`);\n    }\n\n\n    tracks.forEach((t) => {\n      this.logger.info(`pausing remote ${kind} track`);\n      t.enabled = false;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to false`);\n    this[`receiving${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=true. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    if (!this.remoteMediaStream) {\n      throw new Error('No remote media stream available');\n    }\n    const tracks = this.remoteMediaStream\n      .getTracks()\n      .filter((t) => t.kind === kind);\n\n    if (tracks.length === 0) {\n      throw new Error(`No remote ${kind} media tracks to pause`);\n    }\n\n    tracks.forEach((t) => {\n      this.logger.info(`unpausing remote ${kind} track`);\n      t.enabled = true;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to true from ${this[`receiving${capitalize[kind]}`]}`);\n    this[`receiving${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Stops all tracks and streams, closes the peer connection, and removes all\n   * listeners\n   * @returns {undefined}\n   */\n  stop() {\n    if (this.pc.signalingState !== 'closed') {\n      this.pc.getSenders().forEach((s) => s.track.stop());\n      this.pc.close();\n    }\n\n    this.pc.onnegotiationneeded = undefined;\n    this.pc.ontrack = undefined;\n    this.pc.onicecandidate = undefined;\n    this.ended = true;\n    this.off();\n  }\n\n  @debounce(500)\n  /**\n   * Debounced helper for triggering `negotiationneeded`.\n   * @private\n   * @returns {undefined}\n   */\n  // It's not missing, but the decorator is throwing off eslint\n  // eslint-disable-next-line require-jsdoc\n  triggerNegotiationNeeded() {\n    this.trigger('negotiationneeded');\n  }\n\n  /**\n   * Returns a string when attempting to serialize object\n   * @returns {string}\n   */\n  serialize() {\n    return 'WebRTCMediaEngine';\n  }\n}\n\nObject.assign(WebRTCMediaEngine.prototype, Events);\n"]}