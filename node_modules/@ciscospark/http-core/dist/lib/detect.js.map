{"version":3,"sources":["detect.js"],"names":["detect","detectSync","buffer","resolve","b","Blob","type","ArrayBuffer","Uint8Array","Error","mime"],"mappings":";;;;;;;;;;;kBAYwBA,M;QAaRC,U,GAAAA,U;;AArBhB;;;;AACA;;;;AAEA;;;;;AAPA;;;;AAYe,SAASD,MAAT,CAAgBE,MAAhB,EAAwB;AACrC,SAAO,sBAAY,UAACC,OAAD,EAAa;AAC9BA,YAAQF,WAAWC,MAAX,CAAR;AACD,GAFM,CAAP;AAGD;;QAEOF,M,GAAAA,M;;AAER;;;;;;AAKO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACjC;AACA,MAAIE,IAAIF,MAAR;AACA,yBAAe;AACb,QAAIA,kBAAkBG,IAAtB,EAA4B;AAC1B,aAAOH,OAAOI,IAAd;AACD;AACD,QAAIJ,kBAAkBK,WAAtB,EAAmC;AACjCH,UAAI,IAAII,UAAJ,CAAeN,MAAf,CAAJ;AACD,KAFD,MAGK,IAAI,EAAEA,kBAAkBM,UAApB,CAAJ,EAAqC;AACxC,YAAM,IAAIC,KAAJ,CAAU,qEAAV,CAAN;AACD;AACF;;AAED,MAAMH,OAAO,wBAASF,CAAT,CAAb;;AAEA,MAAI,CAACE,IAAL,EAAW;AACT,WAAO,0BAAP;AACD;;AAED,SAAOA,KAAKI,IAAZ;AACD","file":"detect.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport fileType from 'file-type';\nimport {inBrowser} from '@ciscospark/common';\n\n/**\n * Determine mimeType for the specified buffer;\n * @param {Buffer} buffer\n * @returns {Promise<string>}\n */\nexport default function detect(buffer) {\n  return new Promise((resolve) => {\n    resolve(detectSync(buffer));\n  });\n}\n\nexport {detect};\n\n/**\n * Synchronous implementation of {@link detect}\n * @param {Buffer} buffer\n * @returns {string}\n */\nexport function detectSync(buffer) {\n  /* global Blob */\n  let b = buffer;\n  if (inBrowser) {\n    if (buffer instanceof Blob) {\n      return buffer.type;\n    }\n    if (buffer instanceof ArrayBuffer) {\n      b = new Uint8Array(buffer);\n    }\n    else if (!(buffer instanceof Uint8Array)) {\n      throw new Error('`detect` requires a buffer of type Blob, ArrayBuffer, or Uint8Array');\n    }\n  }\n\n  const type = fileType(b);\n\n  if (!type) {\n    return 'application/octet-stream';\n  }\n\n  return type.mime;\n}\n"]}